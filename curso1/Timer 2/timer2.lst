CCS PCH C Compiler, Version 5.084d, 1               26-jul-19 15:30
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\Marcelo Franchini\Desktop\Pic\css\Timer 2\timer2.lst

               ROM used:   288 bytes (1%)
                           Largest free fragment is 32476
               RAM used:   27 (1%) at main() level
                           28 (1%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00EC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <18F4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #fuses XT, MCLR, NOWDT 
.................... #use delay(clock = 4MHZ) 
*
00C2:  CLRF   FEA
00C4:  MOVLW  1B
00C6:  MOVWF  FE9
00C8:  MOVF   FEF,W
00CA:  BZ    00E8
00CC:  MOVLW  01
00CE:  MOVWF  01
00D0:  CLRF   00
00D2:  DECFSZ 00,F
00D4:  BRA    00D2
00D6:  DECFSZ 01,F
00D8:  BRA    00D0
00DA:  MOVLW  4A
00DC:  MOVWF  00
00DE:  DECFSZ 00,F
00E0:  BRA    00DE
00E2:  BRA    00E4
00E4:  DECFSZ FEF,F
00E6:  BRA    00CC
00E8:  GOTO   011C (RETURN)
....................  
....................  
.................... int contador = 0; 
....................  
.................... #INT_TIMER0 
.................... void interrupcao_t0(){ 
....................      clear_interrupt(INT_TIMER0); 
*
00AE:  BCF    FF2.2
....................      set_timer0(3036); 
00B0:  MOVLW  0B
00B2:  MOVWF  FD7
00B4:  MOVLW  DC
00B6:  MOVWF  FD6
....................      output_toggle(PIN_B1); 
00B8:  BCF    F93.1
00BA:  BTG    F8A.1
....................       
00BC:  BCF    FF2.2
00BE:  GOTO   0060
.................... } 
....................       
....................       
....................  
....................  
.................... void main() { 
*
00EC:  CLRF   FF8
00EE:  BCF    FD0.7
00F0:  BSF    07.7
00F2:  CLRF   19
00F4:  MOVF   FC1,W
00F6:  ANDLW  C0
00F8:  IORLW  0F
00FA:  MOVWF  FC1
00FC:  MOVLW  07
00FE:  MOVWF  FB4
....................  
....................       enable_interrupts(GLOBAL); // chave geral de interrupções. 
0100:  MOVLW  C0
0102:  IORWF  FF2,F
....................       enable_interrupts(INT_TIMER0); 
0104:  BSF    FF2.5
....................        
....................        
....................       setup_timer_0(T0_INTERNAL | T0_DIV_16); 
0106:  MOVLW  83
0108:  MOVWF  FD5
....................       set_timer0(3036);  
010A:  MOVLW  0B
010C:  MOVWF  FD7
010E:  MOVLW  DC
0110:  MOVWF  FD6
....................     
....................       while(true) { 
....................        
....................       delay_ms(1000); 
0112:  MOVLW  04
0114:  MOVWF  1A
0116:  MOVLW  FA
0118:  MOVWF  1B
011A:  BRA    00C2
011C:  DECFSZ 1A,F
011E:  BRA    0116
0120:  BRA    0112
....................        
....................       } 
.................... } 
0122:  SLEEP 

Configuration Fuses:
   Word  1: C03F   PLL12 CPUDIV4 USBDIV XT FCMEN IESO
   Word  2: 1E26   PUT BROWNOUT VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
